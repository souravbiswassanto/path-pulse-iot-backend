// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: iot/user/user.proto

package user

import (
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Gender int32

const (
	Gender_male   Gender = 0
	Gender_female Gender = 1
	Gender_other  Gender = 2
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "male",
		1: "female",
		2: "other",
	}
	Gender_value = map[string]int32{
		"male":   0,
		"female": 1,
		"other":  2,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_user_user_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_iot_user_user_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{0}
}

type FitnessGoal int32

const (
	FitnessGoal_UNKNOWN     FitnessGoal = 0
	FitnessGoal_WEIGHT_LOSS FitnessGoal = 1
	FitnessGoal_MUSCLE_GAIN FitnessGoal = 2
	FitnessGoal_MAINTENANCE FitnessGoal = 3
)

// Enum value maps for FitnessGoal.
var (
	FitnessGoal_name = map[int32]string{
		0: "UNKNOWN",
		1: "WEIGHT_LOSS",
		2: "MUSCLE_GAIN",
		3: "MAINTENANCE",
	}
	FitnessGoal_value = map[string]int32{
		"UNKNOWN":     0,
		"WEIGHT_LOSS": 1,
		"MUSCLE_GAIN": 2,
		"MAINTENANCE": 3,
	}
)

func (x FitnessGoal) Enum() *FitnessGoal {
	p := new(FitnessGoal)
	*p = x
	return p
}

func (x FitnessGoal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FitnessGoal) Descriptor() protoreflect.EnumDescriptor {
	return file_iot_user_user_proto_enumTypes[1].Descriptor()
}

func (FitnessGoal) Type() protoreflect.EnumType {
	return &file_iot_user_user_proto_enumTypes[1]
}

func (x FitnessGoal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FitnessGoal.Descriptor instead.
func (FitnessGoal) EnumDescriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{1}
}

type BloodPressure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Systolic  int32 `protobuf:"varint,1,opt,name=systolic,proto3" json:"systolic,omitempty"`
	Diastolic int32 `protobuf:"varint,2,opt,name=diastolic,proto3" json:"diastolic,omitempty"`
}

func (x *BloodPressure) Reset() {
	*x = BloodPressure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_user_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BloodPressure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BloodPressure) ProtoMessage() {}

func (x *BloodPressure) ProtoReflect() protoreflect.Message {
	mi := &file_iot_user_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BloodPressure.ProtoReflect.Descriptor instead.
func (*BloodPressure) Descriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{0}
}

func (x *BloodPressure) GetSystolic() int32 {
	if x != nil {
		return x.Systolic
	}
	return 0
}

func (x *BloodPressure) GetDiastolic() int32 {
	if x != nil {
		return x.Diastolic
	}
	return 0
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_user_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_iot_user_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *UserID) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DietaryChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protein int32 `protobuf:"varint,1,opt,name=protein,proto3" json:"protein,omitempty"`
	Lipid   int32 `protobuf:"varint,2,opt,name=lipid,proto3" json:"lipid,omitempty"`
	Carbs   int32 `protobuf:"varint,3,opt,name=carbs,proto3" json:"carbs,omitempty"`
}

func (x *DietaryChart) Reset() {
	*x = DietaryChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_user_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DietaryChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DietaryChart) ProtoMessage() {}

func (x *DietaryChart) ProtoReflect() protoreflect.Message {
	mi := &file_iot_user_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DietaryChart.ProtoReflect.Descriptor instead.
func (*DietaryChart) Descriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{2}
}

func (x *DietaryChart) GetProtein() int32 {
	if x != nil {
		return x.Protein
	}
	return 0
}

func (x *DietaryChart) GetLipid() int32 {
	if x != nil {
		return x.Lipid
	}
	return 0
}

func (x *DietaryChart) GetCarbs() int32 {
	if x != nil {
		return x.Carbs
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_user_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_iot_user_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{3}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *UserID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Age            int32              `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`
	Weight         float32            `protobuf:"fixed32,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Height         float32            `protobuf:"fixed32,5,opt,name=height,proto3" json:"height,omitempty"`
	DiabeticLevel  float32            `protobuf:"fixed32,6,opt,name=diabetic_level,json=diabeticLevel,proto3" json:"diabetic_level,omitempty"`
	Gender         Gender             `protobuf:"varint,7,opt,name=gender,proto3,enum=Gender" json:"gender,omitempty"`
	Email          string             `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNo        string             `protobuf:"bytes,9,opt,name=phone_no,json=phoneNo,proto3" json:"phone_no,omitempty"`
	Address        string             `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	Bp             *BloodPressure     `protobuf:"bytes,11,opt,name=bp,proto3" json:"bp,omitempty"`
	FitnessGoal    FitnessGoal        `protobuf:"varint,12,opt,name=fitness_goal,json=fitnessGoal,proto3,enum=FitnessGoal" json:"fitness_goal,omitempty"`
	CreatedAt      *datetime.DateTime `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *datetime.DateTime `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CaloriesBurned float32            `protobuf:"fixed32,15,opt,name=calories_burned,json=caloriesBurned,proto3" json:"calories_burned,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iot_user_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_iot_user_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_iot_user_user_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetId() *UserID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *User) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *User) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *User) GetDiabeticLevel() float32 {
	if x != nil {
		return x.DiabeticLevel
	}
	return 0
}

func (x *User) GetGender() Gender {
	if x != nil {
		return x.Gender
	}
	return Gender_male
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhoneNo() string {
	if x != nil {
		return x.PhoneNo
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetBp() *BloodPressure {
	if x != nil {
		return x.Bp
	}
	return nil
}

func (x *User) GetFitnessGoal() FitnessGoal {
	if x != nil {
		return x.FitnessGoal
	}
	return FitnessGoal_UNKNOWN
}

func (x *User) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *datetime.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetCaloriesBurned() float32 {
	if x != nil {
		return x.CaloriesBurned
	}
	return 0
}

var File_iot_user_user_proto protoreflect.FileDescriptor

var file_iot_user_user_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x6f, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x49, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x61, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x69, 0x61, 0x73, 0x74, 0x6f, 0x6c, 0x69, 0x63, 0x22, 0x18, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x0c, 0x44, 0x69, 0x65, 0x74, 0x61, 0x72, 0x79,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x62, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x72, 0x62, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0xee, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x61, 0x62, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x69, 0x61, 0x62, 0x65, 0x74, 0x69, 0x63, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x42, 0x6c,
	0x6f, 0x6f, 0x64, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x02, 0x62, 0x70, 0x12,
	0x2f, 0x0a, 0x0c, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x46, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x47,
	0x6f, 0x61, 0x6c, 0x52, 0x0b, 0x66, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x6f, 0x61, 0x6c,
	0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x2a, 0x29, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x08, 0x0a, 0x04, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x02,
	0x2a, 0x4d, 0x0a, 0x0b, 0x46, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x47, 0x6f, 0x61, 0x6c, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x55, 0x53, 0x43, 0x4c, 0x45, 0x5f, 0x47, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x32,
	0x89, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x07, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x1a, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x1d, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x05, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x1d, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x1f, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x07, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x4e, 0x5a, 0x4c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x61, 0x76,
	0x62, 0x69, 0x73, 0x77, 0x61, 0x73, 0x73, 0x61, 0x6e, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x74, 0x68,
	0x2d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x2d, 0x69, 0x6f, 0x74, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2f, 0x69, 0x6f, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_iot_user_user_proto_rawDescOnce sync.Once
	file_iot_user_user_proto_rawDescData = file_iot_user_user_proto_rawDesc
)

func file_iot_user_user_proto_rawDescGZIP() []byte {
	file_iot_user_user_proto_rawDescOnce.Do(func() {
		file_iot_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_iot_user_user_proto_rawDescData)
	})
	return file_iot_user_user_proto_rawDescData
}

var file_iot_user_user_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_iot_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_iot_user_user_proto_goTypes = []interface{}{
	(Gender)(0),               // 0: Gender
	(FitnessGoal)(0),          // 1: FitnessGoal
	(*BloodPressure)(nil),     // 2: BloodPressure
	(*UserID)(nil),            // 3: UserID
	(*DietaryChart)(nil),      // 4: DietaryChart
	(*Empty)(nil),             // 5: Empty
	(*User)(nil),              // 6: User
	(*datetime.DateTime)(nil), // 7: google.type.DateTime
}
var file_iot_user_user_proto_depIdxs = []int32{
	3,  // 0: User.id:type_name -> UserID
	0,  // 1: User.gender:type_name -> Gender
	2,  // 2: User.bp:type_name -> BloodPressure
	1,  // 3: User.fitness_goal:type_name -> FitnessGoal
	7,  // 4: User.created_at:type_name -> google.type.DateTime
	7,  // 5: User.updated_at:type_name -> google.type.DateTime
	3,  // 6: UserManager.GetUser:input_type -> UserID
	6,  // 7: UserManager.CreateUser:input_type -> User
	6,  // 8: UserManager.UpdateUser:input_type -> User
	3,  // 9: UserManager.DeleteUser:input_type -> UserID
	6,  // 10: UserManager.GetUser:output_type -> User
	5,  // 11: UserManager.CreateUser:output_type -> Empty
	5,  // 12: UserManager.UpdateUser:output_type -> Empty
	5,  // 13: UserManager.DeleteUser:output_type -> Empty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_iot_user_user_proto_init() }
func file_iot_user_user_proto_init() {
	if File_iot_user_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iot_user_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BloodPressure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_user_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_user_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DietaryChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_user_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iot_user_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iot_user_user_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iot_user_user_proto_goTypes,
		DependencyIndexes: file_iot_user_user_proto_depIdxs,
		EnumInfos:         file_iot_user_user_proto_enumTypes,
		MessageInfos:      file_iot_user_user_proto_msgTypes,
	}.Build()
	File_iot_user_user_proto = out.File
	file_iot_user_user_proto_rawDesc = nil
	file_iot_user_user_proto_goTypes = nil
	file_iot_user_user_proto_depIdxs = nil
}
